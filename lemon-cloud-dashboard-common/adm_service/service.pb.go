// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/adm_service/service.proto

package adm_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	adm_dto "github.com/lemon-cloud-service/lemon-cloud-dashboard/lemon-cloud-dashboard-common/adm_dto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("grpc/adm_service/service.proto", fileDescriptor_ecada6edad9c567c) }

var fileDescriptor_ecada6edad9c567c = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4b, 0x2f, 0x2a, 0x48,
	0xd6, 0x4f, 0x4c, 0xc9, 0x8d, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x87, 0xd2, 0x7a,
	0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xdc, 0x48, 0x52, 0x52, 0xd2, 0xe9, 0xf9, 0xf9, 0xe9, 0x39,
	0xa9, 0xfa, 0x60, 0xa9, 0xa4, 0xd2, 0x34, 0xfd, 0xd4, 0xdc, 0x82, 0x92, 0x4a, 0x88, 0x4a, 0x29,
	0x29, 0xb8, 0x49, 0x29, 0x25, 0xf9, 0xa8, 0xa6, 0x18, 0xc5, 0x70, 0xf1, 0x05, 0x43, 0x04, 0xa0,
	0x94, 0x90, 0x17, 0x97, 0x80, 0x7b, 0x6a, 0x89, 0x6f, 0x25, 0x94, 0xef, 0x93, 0x59, 0x5c, 0x22,
	0x24, 0xa6, 0x07, 0x31, 0x5f, 0x0f, 0x66, 0xbe, 0x9e, 0x2b, 0xc8, 0x7c, 0x29, 0x19, 0x3d, 0xa8,
	0xa9, 0x7a, 0x8e, 0x39, 0x39, 0x30, 0x73, 0x4a, 0x12, 0x4b, 0x4a, 0x8b, 0x5d, 0x4a, 0xf2, 0x95,
	0x18, 0x9c, 0xe2, 0xa3, 0x62, 0xd3, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5,
	0x73, 0x52, 0x73, 0xf3, 0xf3, 0x74, 0x93, 0x73, 0xf2, 0x4b, 0x53, 0x74, 0x61, 0x7e, 0x42, 0x16,
	0x4b, 0x49, 0x2c, 0xce, 0x48, 0xca, 0x4f, 0x2c, 0x4a, 0xc1, 0x2e, 0xaa, 0x9b, 0x9c, 0x9f, 0x9b,
	0x9b, 0x9f, 0x87, 0x1c, 0x24, 0x49, 0x6c, 0x60, 0x07, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x20, 0x29, 0x39, 0x31, 0x2d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceServiceClient is the client API for ServiceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceServiceClient interface {
	GetMyServiceList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*adm_dto.AllServiceStatusDto, error)
}

type serviceServiceClient struct {
	cc *grpc.ClientConn
}

func NewServiceServiceClient(cc *grpc.ClientConn) ServiceServiceClient {
	return &serviceServiceClient{cc}
}

func (c *serviceServiceClient) GetMyServiceList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*adm_dto.AllServiceStatusDto, error) {
	out := new(adm_dto.AllServiceStatusDto)
	err := c.cc.Invoke(ctx, "/adm_service.ServiceService/GetMyServiceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServiceServer is the server API for ServiceService service.
type ServiceServiceServer interface {
	GetMyServiceList(context.Context, *empty.Empty) (*adm_dto.AllServiceStatusDto, error)
}

// UnimplementedServiceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServiceServiceServer struct {
}

func (*UnimplementedServiceServiceServer) GetMyServiceList(ctx context.Context, req *empty.Empty) (*adm_dto.AllServiceStatusDto, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyServiceList not implemented")
}

func RegisterServiceServiceServer(s *grpc.Server, srv ServiceServiceServer) {
	s.RegisterService(&_ServiceService_serviceDesc, srv)
}

func _ServiceService_GetMyServiceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServiceServer).GetMyServiceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adm_service.ServiceService/GetMyServiceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServiceServer).GetMyServiceList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "adm_service.ServiceService",
	HandlerType: (*ServiceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMyServiceList",
			Handler:    _ServiceService_GetMyServiceList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/adm_service/service.proto",
}
